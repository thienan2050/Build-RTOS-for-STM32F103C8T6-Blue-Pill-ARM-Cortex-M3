


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             | .text|, CODE, READONLY, ALIGN
 = 2 
                                                            ; Code area
    2 00000000                 THUMB                        ; Thumb directive
    3 00000000                 EXTERN           currentPt
    4 00000000                 EXPORT           SysTick_Handler
    5 00000000                 EXPORT           osSchedulerLaunch
    6 00000000         
    7 00000000         SysTick_Handler                      ; Periodic interrup
                                                            t, the proceesor wi
                                                            ll automatically sa
                                                            ves 8 Registers to 
                                                            Stack Frame ( R0, R
                                                            1, R2, R3, R12, LR,
                                                             PC, xPSR), so we h
                                                            ave to save the rem
                                                            aining registers.
    8 00000000 B672            CPSID            I           ; Disable interrupt
                                                            
    9 00000002 E92D 0FF0       PUSH             {R4 - R11}  ; Save R4, R5, R6, 
                                                            R7, R8, R9, R10, R1
                                                            1
   10 00000006 480D            LDR              R0, =currentPt ;   ; Load value
                                                             of currentPt(taskX
                                                            's address) to R0
   11 00000008 6801            LDR              R1, [R0]    ; R1 = R0 =  curren
                                                            tPt
   12 0000000A F8C1 D000       STR              SP, [R1]    ; SP = currentPt
   13 0000000E 6849            LDR              R1, [R1, #4] ; R1 = currentPt->
                                                            Next [ Number #4 ta
                                                            kes us to the secon
                                                            d entry in TCB ]
   14 00000010 6001            STR              R1, [R0]    ; currentPt = R1
   15 00000012 F8D1 D000       LDR              SP, [R1]    ; SP = currentPt->s
                                                            tackPt
   16 00000016 E8BD 0FF0       POP              {R4 - R11}
   17 0000001A B662            CPSIE            I           ; Enable interrupt
   18 0000001C 4770            BX               LR          ; Automatically res
                                                            tore 8 stored regis
                                                            ters 
   19 0000001E         
   20 0000001E         osSchedulerLaunch
   21 0000001E 4807            LDR              R0, =currentPt
   22 00000020 6802            LDR              R2, [R0]    ; R2 = currentPt
   23 00000022 F8D2 D000       LDR              SP, [R2]    ; SP = currentPt->s
                                                            tackPt
   24 00000026 E8BD 0FF0       POP              {R4 - R11}
   25 0000002A BC0F            POP              {R0 - R3}
   26 0000002C F85D CB04       POP              {R12}
   27 00000030 B001            ADD              SP, SP, #4
   28 00000032 F85D EB04       POP              {LR}
   29 00000036 B001            ADD              SP, SP, #4
   30 00000038 B662            CPSIE            I
   31 0000003A 4770            BX               LR
   32 0000003C         
   33 0000003C                 ALIGN
   34 0000003C                 END
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw



ARM Macro Assembler    Page 2 


ork --depend=.\objects\oskernel_1.d -o.\objects\oskernel_1.o -I"C:\Users\thien\
Desktop\Build-RTOS-for-STM32F103C8T6-Blue-Pill-ARM-Cortex-M3\13 RTOS Scheduler 
Using SysTick Exceptions only\RTE" -I"C:\Users\thien\Desktop\Build-RTOS-for-STM
32F103C8T6-Blue-Pill-ARM-Cortex-M3\13 RTOS Scheduler Using SysTick Exceptions o
nly\RTE\Device\STM32F103C8" -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.5.0\CMSIS\Include
 -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.3.0\Device\Include --predefine="__U
VISION_VERSION SETA 517" --predefine="_RTE_ SETA 1" --predefine="STM32F10X_MD S
ETA 1" --list=.\listings\oskernel.lst osKernel.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

 .text 00000000

Symbol:  .text
   Definitions
      At line 1 in file osKernel.s
   Uses
      None
Comment:  .text unused
SysTick_Handler 00000000

Symbol: SysTick_Handler
   Definitions
      At line 7 in file osKernel.s
   Uses
      At line 4 in file osKernel.s
Comment: SysTick_Handler used once
osSchedulerLaunch 0000001E

Symbol: osSchedulerLaunch
   Definitions
      At line 20 in file osKernel.s
   Uses
      At line 5 in file osKernel.s
Comment: osSchedulerLaunch used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

currentPt 00000000

Symbol: currentPt
   Definitions
      At line 3 in file osKernel.s
   Uses
      At line 10 in file osKernel.s
      At line 21 in file osKernel.s

1 symbol
339 symbols in table
